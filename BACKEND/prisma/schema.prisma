generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//ok
model LigneCommandeReduction {
  id_lignecommande Int
  id_reduction     Int
  Reduction        Reduction     @relation(fields: [id_reduction], references: [id_reduction], onDelete: Cascade)
  LigneCommande    LigneCommande @relation(fields: [id_lignecommande], references: [id_lignecommande], onDelete: Cascade)

  @@id([id_lignecommande, id_reduction])
}

//ok
model Artiste {
  id_maillot_artiste          Int     @id @default(autoincrement())
  nom_artiste                 String  @db.VarChar(100)
  prenom_artiste              String  @db.VarChar(100)
  pays_artiste                String  @default(" ") @db.VarChar(100)
  date_naissance_artiste      String  @default(" ") @db.VarChar(100)
  site_web_artiste            String  @default(" ") @db.VarChar(500)
  url_image_artiste_1         String  @default(" ")
  url_image_artiste_2         String  @default(" ")
  url_image_artiste_3         String  @default(" ")
  description_artiste_1       String  @default(" ")
  description_artiste_2       String  @default(" ")
  description_artiste_3       String  @default(" ")
  url_instagram_reseau_social String?
  url_tiktok_reseau_social    String?
  Maillot                     Maillot @relation(fields: [id_maillot_artiste], references: [id_maillot], onDelete: Cascade, onUpdate: NoAction)
}

//ok
model Association {
  id_maillot_association            Int     @id @default(autoincrement())
  nom_association                   String  @db.VarChar(100)
  numero_identification_association String  @db.VarChar(100)
  adresse_siege_social_association  String  @default(" ")
  pays_association                  String  @default(" ") @db.VarChar(100)
  site_web_association              String  @default(" ") @db.VarChar(100)
  url_image_association_1           String  @default(" ")
  url_image_association_2           String  @default(" ")
  url_image_association_3           String  @default(" ")
  description_association_1         String  @default(" ")
  description_association_2         String  @default(" ")
  description_association_3         String  @default(" ")
  Maillot                           Maillot @relation(fields: [id_maillot_association], references: [id_maillot], onDelete: Cascade, onUpdate: NoAction)
}

//ok
model Avis {
  id_avis          Int                   @id @default(autoincrement())
  id_maillot       Int
  id_client        Int
  date_avis        DateTime?             @db.Timestamp(6)
  classement_avis  Int
  titre_avis       String                @default(" ") @db.VarChar(300)
  description_avis String                @default(" ")
  Client           Client                @relation(fields: [id_client], references: [id_client], onDelete: NoAction, onUpdate: NoAction)
  Maillot          Maillot               @relation(fields: [id_maillot], references: [id_maillot], onDelete: Cascade, onUpdate: NoAction)
}

//Reste lui Ã  creer 
model Avoir {
  id_avoir      Int       @id @default(autoincrement())
  numero_avoir  String?   @unique @db.VarChar(100)
  date_avoir    DateTime? @db.Timestamp(6)
  avoir_hors_ue Boolean   @default(false)
}

//ok
model Role {
  id_role     Int      @id @default(autoincrement())
  nom_role    String   @unique @db.VarChar(50)  
  description String?
  Clients     Client[] 
}
//ok
model Client {
  id_client             Int           @id @default(autoincrement())
  id_role               Int?          
  Role                  Role?         @relation(fields: [id_role], references: [id_role])
  nom_client            String        @db.VarChar(100)
  prenom_client         String?       @db.VarChar(100)
  civilite              civilite_enum @default(non_specifie)
  date_naissance_client DateTime?     @db.Timestamp(6)
  adresse_client        String        @db.VarChar(500)
  code_postal_client    String        @db.VarChar(5)
  ville_client          String        @db.VarChar(100)
  pays_client           String        @db.VarChar(100)
  mot_de_passe          String
  adresse_mail_client   String        @unique @db.VarChar(100)
  Avis                  Avis[]
  Commande              Commande[]
  LigneCommande         LigneCommande[]
}
//ok
model Commande {
  id_commande     Int                  @id @default(autoincrement())
  id_client       Int
  date_commande   DateTime?            @db.Timestamp(6)
  statut_commande statut_commande_enum  @default(en_cours)
  Client          Client               @relation(fields: [id_client], references: [id_client], onDelete: Cascade, onUpdate: NoAction)
  LigneCommande   LigneCommande[]
  statut_paiement statut_paiement_enum @default(en_attente)

  Livraison Livraison[]
}

model Facture {
  numero_facture  String    @id @db.VarChar(100)
  id_commande     Int
  date_facture    DateTime? @default(now()) @db.Timestamp(6)
  facture_hors_ue Boolean?  @default(false)
}
//ok
model LigneCommande {
  id_lignecommande Int                 @id @default(autoincrement())
  id_client        Int
  id_maillot       Int
  id_commande      Int?              
  id_tva           Int                @default(1) 
  taille_maillot   taille_maillot_enum
  quantite         Int                 @default(0)
  prix_ht          Decimal             @default(0) @db.Decimal(10, 2)

  Client           Client              @relation(fields: [id_client], references: [id_client], onDelete: Cascade)
  Maillot          Maillot             @relation(fields: [id_maillot], references: [id_maillot], onDelete: Cascade)
  Commande         Commande?           @relation(fields: [id_commande], references: [id_commande], onDelete: Cascade)
  TVA              TVA                 @relation(fields: [id_tva], references: [id_tva])

  LigneCommandeReduction LigneCommandeReduction[]
  LigneCommandePersonnalisation LigneCommandePersonnalisation[]
}
model Livraison {
  id_livraison          Int              @id @default(autoincrement())
  id_commande           Int
  id_methode_livraison  Int
  id_lieu_livraison     Int
  id_livreur            Int
  date_livraison        DateTime?        @db.Timestamp(6)
  adresse_livraison     String           @default("") @db.VarChar(500)
  code_postal_livraison String?          @db.VarChar(5)
  ville_livraison       String           @default("") @db.VarChar(100)
  pays_livraison        String           @default("") @db.VarChar(100)

  MethodeLivraison MethodeLivraison @relation(fields: [id_methode_livraison], references: [id_methode_livraison])
  LieuLivraison    LieuLivraison    @relation(fields: [id_lieu_livraison], references: [id_lieu_livraison])
  Livreur          Livreur          @relation(fields: [id_livreur], references: [id_livreur])
  Commande         Commande         @relation(fields: [id_commande], references: [id_commande])
}

model MethodeLivraison {
  id_methode_livraison Int              @id @default(autoincrement())
  nom_methode          String           @unique @db.VarChar(50) 
  prix_methode         Int              @default(0) 
  Livraison            Livraison[]
}

model LieuLivraison {
  id_lieu_livraison Int              @id @default(autoincrement())
  nom_lieu           String           @unique @db.VarChar(50)
  prix_lieu          Int              @default(0) // 
  Livraison          Livraison[]
}

model Livreur {
  id_livreur   Int       @id @default(autoincrement())
  nom_livreur String     @unique @db.VarChar(50) 
  Livraison   Livraison[]
}

//ok
model Maillot {
  id_maillot              Int                       @id @default(autoincrement())
  id_tva                  Int                       @default(1)
  nom_maillot             String                    @default("") @db.VarChar(100)
  pays_maillot            String                    @default("") @db.VarChar(100)
  description_maillot     String                    @default("")
  composition_maillot     String                    @default("")
  url_image_maillot_1     String                    @default(" ")
  url_image_maillot_2     String                    @default(" ")
  url_image_maillot_3     String                    @default(" ")
  origine                 String                    @default("")
  tracabilite             String                    @default("")
  entretien               String                    @default("")
  prix_ht_maillot         Int                       @default(0)
  Artiste                 Artiste?
  Association             Association?
  Avis                    Avis[]
  LigneCommande           LigneCommande[]

}
//ok
model LigneCommandePersonnalisation {
  id_lignecommande         Int
  id_personnalisation      Int
  prix_personnalisation_ht Decimal @db.Decimal(10,2) 

  LigneCommande    LigneCommande    @relation(fields: [id_lignecommande], references: [id_lignecommande], onDelete: Cascade)
  Personnalisation Personnalisation @relation(fields: [id_personnalisation], references: [id_personnalisation], onDelete: Cascade)

  @@id([id_lignecommande, id_personnalisation])
}

//ok
model Personnalisation {
  id_personnalisation     Int                        @id @default(autoincrement())
  type_personnalisation   type_personnalisation_enum
  prix_ht                 Decimal                    @db.Decimal(10,2)
  description             String                     @default("")
  LigneCommandePersonnalisation LigneCommandePersonnalisation[]
}

//ok
model Reduction {
  id_reduction         Int                        @id @default(autoincrement())
  code_reduction       String                     @unique @db.VarChar(100)
  description          String?
  valeur_reduction     Decimal                    @db.Decimal(10, 2)
  date_debut_reduction DateTime?                  @db.Timestamp(6)
  date_fin_reduction   DateTime?                  @db.Timestamp(6)
  type_reduction       type_reduction_enum
  statut_reduction     statut_reduction_type_enum
  date_creation        DateTime?                  @default(now()) @db.Timestamp(6)

  LigneCommandeReduction LigneCommandeReduction[]
}

model Retour {
  id_commande_retour Int               @id
  motif_retour       motif_retour_enum
  date_retour        DateTime          @db.Timestamp(6)
  droit_retour       Boolean           @default(false)
  reception_retour   Boolean           @default(false)
}


model Stock {
  id_stock        Int                 @id @default(autoincrement())
  id_maillot      Int
  taille_maillot  taille_maillot_enum
  quantite_entree Int                 @default(0)
  quantite_sortie Int                 @default(0)
  quantite_total  Int                 @default(0)
  StockMaillot    StockMaillot[]
}

model StockMaillot {
  id_stock_maillot Int                 @id @default(autoincrement())
  id_stock         Int
  quantite_stock   Int                 @default(0)
  type_mouvement   type_mouvement_enum
  date_mouvement   DateTime?           @default(now()) @db.Timestamp(6)
  Stock            Stock               @relation(fields: [id_stock], references: [id_stock], onDelete: Cascade, onUpdate: NoAction)
}
//ok
model TVA {
  id_tva          Int       @id @default(autoincrement())
  taux_tva        Int
  description_tva String    @db.VarChar(100)

  LigneCommande LigneCommande[]
}

enum civilite_enum {
  femme
  homme
  non_specifie
}


enum motif_retour_enum {
  taille
  non_conforme
  probleme_qualite
}

enum status_enum {
  active
  inactive
}

enum statut_commande_enum {
  en_cours
  livraison
  livre
  retard
  retour
}


enum statut_reduction_type_enum {
  active
  expiree
  annulee
}

enum taille_maillot_enum {
  XS
  S
  M
  L
  XL
}

enum type_mouvement_enum {
  entree
  sortie
}

enum type_personnalisation_enum {
  name
  color
  name_color
}

enum type_reduction_enum {
  pourcentage
  montant_fixe
  frais_livraison
  autre
}

enum statut_paiement_enum {
  en_attente
  paye
  echec
}